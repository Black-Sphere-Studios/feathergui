// Copyright (c)2019 Black Sphere Studios
// For conditions of distribution and use, see copyright notice in "feather.h"

#ifndef FG__DOCUMENT_H
#define FG__DOCUMENT_H

#include "message.h"
#include "khash.h"
#include "event.h"

#ifdef  __cplusplus
extern "C" {
#endif

KHASH_DECLARE(transition, int, unsigned long long);

struct FG__R_TREE_NODE;
struct FG__OUTLINE_NODE;
struct FG__DOCUMENT_NODE;
struct FG__EVENT_REF;
typedef void fgBehaviorState;

// Represents a single document state node in the document tree, generated by the outline.
typedef struct FG__DOCUMENT_NODE
{
  fgRect area; // This is relative to the R-Tree node it belongs to, and is not a meaningful value
  fgRect extent; // area relative to the parent's extent taken up by child nodes.
  fgFlag stateFlags;
  struct FG__DOCUMENT_NODE* sibling;
  struct FG__R_TREE_NODE* rtnode; // The corresponding RTNode 
  struct FG__OUTLINE_NODE* outline;
  struct kh_transition_s* tstate; // timestamps mapped to a corresponding field for the last time it was changed
  fgBehaviorState* state;
  fgEvent* events;
  kh_event_t* listeners;
  void* backend; // Arbitrary state used by the backend
} fgDocumentNode;

FG_COMPILER_DLLEXPORT fgDocumentNode* fgAllocDocumentNode();
FG_COMPILER_DLLEXPORT void fgDestroyDocumentNode(struct FG__ROOT* root, fgDocumentNode* node, float scale, fgVec dpi);

#ifdef  __cplusplus
}
#endif

#endif