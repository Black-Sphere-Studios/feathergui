package Feather;

message Coord {
  optional float abs = 1;
  optional float rel = 2;
}

message Vec {
  required Coord x = 1;
  required Coord y = 2;
}

message Rect {
	required Coord left = 1;
	required Coord top = 2;
	required Coord right = 3;
	required Coord bottom = 4;
}

message Element {
  required Rect area = 1;
  optional float rotation = 2; // Implementations are not required to support rotation.
  optional Vec center = 3;
}

message Child {
  required Element element = 1;
  optional int32 order = 2;
  optional uint32 flags = 3;
  repeated uint32 statics = 4 [packed=true]; // These are REFERENCES to static ID's, so even children of other statics can re-use static definitions.
}

message Window {
  required Child element = 1;
  optional uint32 id = 2;
  optional uint32 contextmenu = 3;
  repeated uint32 children = 4 [packed=true]; // These are IDs of various widgets. They MUST be widget IDs, not static IDs.
}

message Data { // This defines anything that can either be a relative or absolute filepath, or embedded as bytes in the file.
  optional string file = 1;
  optional bytes data = 2;
}

message Static {
  required Child element = 1;
  optional Data data = 2;
  enum DATATYPE {
    IMAGE = 0;
    TEXT = 1;
    VECTOR = 2;
    LINE = 3;
    RECT = 4;
  }
  optional DATATYPE type = 3;
}

message Grid {
  required Window window = 1;
}

message Scrollbar {
  required Window window = 1;
}

message Button {
  required Window window = 1;
}

message Combobox {
  required Window window = 1;
}

message List {
  required Window window = 1;
}

message Menu {
  required Window window = 1;
}

message TabGroup {
  required Window window = 1;
}

message Textbox {
  required Window window = 1;
}

message TopWindow {
  required Window window = 1;
}

message Checkbox {
  required Window window = 1;
}

message Slider {
  required Window window = 1;
}

message ProgressBar {
  required Window window = 1;
}

message Toolbar {
  required Window window = 1;
}

message Tree {
  required Window window = 1;
}